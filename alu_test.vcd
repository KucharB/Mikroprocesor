$date
	Fri Oct 25 10:23:48 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_tb $end
$var wire 1 ! cy $end
$var reg 8 " a [7:0] $end
$var reg 8 # b [7:0] $end
$var reg 3 $ op [2:0] $end
$scope module alu_unit $end
$var wire 8 % a [7:0] $end
$var wire 8 & b [7:0] $end
$var wire 3 ' op [2:0] $end
$var reg 1 ! CY $end
$var reg 8 ( out [7:0] $end
$var reg 9 ) sum [8:0] $end
$upscope $end
$upscope $end
$scope module alu_tb $end
$scope module alu_unit $end
$upscope $end
$upscope $end
$scope module operation_block_tb $end
$var wire 1 * ce $end
$var wire 1 + cy $end
$var wire 8 , result [7:0] $end
$var reg 1 - aku_enable $end
$var reg 8 . b_input [7:0] $end
$var reg 1 / clk $end
$var reg 3 0 op_code [2:0] $end
$scope module op_bo1 $end
$var wire 1 * aku_enable $end
$var wire 1 + carry_flag $end
$var wire 1 / clk $end
$var wire 8 1 in_b [7:0] $end
$var wire 3 2 operation_code [2:0] $end
$var wire 8 3 out_result [7:0] $end
$var wire 8 4 operation_result [7:0] $end
$var wire 1 5 Carry_flag $end
$scope module aku_unit $end
$var wire 1 * ce $end
$var wire 1 / clk $end
$var wire 8 6 data_in [7:0] $end
$var reg 8 7 data_out [7:0] $end
$upscope $end
$scope module alu_unit $end
$var wire 8 8 a [7:0] $end
$var wire 8 9 b [7:0] $end
$var wire 3 : op [2:0] $end
$var reg 1 5 CY $end
$var reg 8 ; out [7:0] $end
$var reg 9 < sum [8:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx <
b1010 ;
b110 :
b1010 9
bx 8
bx 7
b1010 6
x5
b1010 4
bx 3
b110 2
b1010 1
b110 0
0/
b1010 .
1-
bx ,
z+
z*
b1100 )
b1100 (
b0 '
b10 &
b1010 %
b0 $
b10 #
b1010 "
0!
$end
#50
b1000 (
0-
1/
b1 $
b1 '
#100
b10 (
0/
b10 $
b10 '
#150
b1010 (
1/
b11 $
b11 '
#200
b1000 (
0/
b100 $
b100 '
#250
b11110101 (
1/
b101 $
b101 '
